//===== rAthena Script =======================================
//= saders Hunting Quest
//===== By: ==================================================
//= Sader1992 (edited by tonn)
//https://rathena.org/board/profile/30766-sader1992/
//===== Current Version: =====================================
//= 5.2
//===== Compatible With: ===================================== 
//= rAthena Project
//https://rathena.org/board/files/file/3579-saders-hunting-quest/
//https://github.com/sader1992/sader_scripts
//===== Description: =========================================
// @reloadnpc npc/custom/centro/quests/hunting_quest.txt
//============================================================
//============================================================

// CD (int) - cooldown in minutes
// COM (bool) - did complete quest
// CC (int) - current count
// C (int) - total count
// ID (int) - mob id
// IRD (int) - item reward
// CRD (int) - count reward
// THB (int) - total hunting badges

//-	pointshop	Hunting_Quest_Shop	-1,#HUNT_Q_POINTS,512:1; // Account Based Shop
//-	pointshop	Hunting_Quest_Shop	-1,HUNT_Q_POINTS,512:1; // Character Based Shop
centro,127,148,4	script	EXP Quest	732,{
  function Ac;
  function CooldownStr;

  .@name$ ="[ ^9933CCEXP Quest^000000 ]";

  mes .@name$;
  mes "Your quest progress:";

  for (.@i = 0; .@i < getarraysize(.CataName$); .@i++) {
    // Did complete quest?
    if (getd(Ac() + "COM_" + .@i)) {
      mes "^339955" + .CataName$[.@i] + "^000000: ^339955Done!^000000";

      // Add points
      if (.CataRP[.@i] > 0) {
        .@pts = getd(Ac() + "POINTS") + .CataRP[.@i];
        setd(Ac() + "POINTS", .@pts);
        dispbottom "You received " + .CataRP[.@i] + " point" + (.CataRP[.@i] > 1 ? "s" : "") +
          " by finishing the hunting quest. You now have " + .@pts + " point" + (.@pts > 1 ? "s" : "") + ".";
      }

      // Add EXP
      if (.CataBXP[.@i] || .CataJXP[.@i]) {
        if (.ExpServerRate) {
          getexp .CataBXP[.@i], .CataJXP[.@i];
        } else {
          getexp2 .CataBXP[.@i], .CataJXP[.@i];
        }
      }

      // Get item reward
      if (getd(".IRD_" + .@i)) {
        for (.@j = 0; .@j < getarraysize(getd(".IRD_" + .@i)); .@j++) {
          .@rewardhb = getd(".CRD_" + .@i + "[" + .@j + "]");
          getitem(getd(".IRD_" + .@i + "[" + .@j + "]"), .@rewardhb);

          // Log total HB to DB
          .@totalhb = getd("#" + Ac() + "THB_" + .@i) || 0;
          setd("#" + Ac() + "THB_" + .@i, .@totalhb + .@rewardhb);
        }
      }

      // Set variables
      setd(
        Ac() + "CD_" + .@i,
        getgmlevel() >= .GMTestGroup
          ? gettimetick(2) + 60 // 1 min cooldown for GMs (<= 10)
          : gettimetick(2) + (.CataCD[.@i] * 60)
      ); // Apply cooldown in minutes
      setd(Ac() + "COM_" + .@i, false);
      setd(Ac() + "ID_" + .@i, 0);
      setd(Ac() + "C_" + .@i, 0);
      setd(Ac() + "CC_" + .@i, 0);

      continue;
    }

    // Show category cooldown
    .@CD = getd(Ac() + "CD_" + .@i);
    if (.@CD > gettimetick(2)) {
      mes "^339955" + .CataName$[.@i] + "^000000: ^FF0000" + CooldownStr(.@CD) + "^000000";
      continue;
    }

    // Not yet complete, show progress
    if (getd(Ac() + "C_" + .@i)) {
      mes "^339955" + .CataName$[.@i] + "^000000: " +
          strmobinfo(1, getd(Ac() + "ID_" + .@i)) +
          " (^3355FF" + getd(Ac() + "CC_" + .@i) + " / " + getd(Ac() + "C_" + .@i) + "^000000)";
      continue;
    }

    // Not in progress nor cooldown
    mes "^339955" + .CataName$[.@i] + "^000000: ^888888Inactive^000000";
  }

  // Select category
  .@s1 = select(implode(.CataName$,":")) - 1;
  clear;

  // Cooldown
  .@CD = getd(Ac() + "CD_" + .@s1);
  if (.@CD > gettimetick(2)) {
    mes .@name$;
    mes "This quest is still in cooldown.";
    mes "Come back after";
    mes "^FF0000" + CooldownStr(.@CD) + "^000000";
    mes " ";
    mes "Remember, these quests are";
    mes "^FF0000character-based^000000.";
    end;
  }

  // Show quest progress
  if (getd(Ac() + "ID_" + .@s1)) {
    mes .@name$;
    mes "^339955" + .CataName$[.@s1] + ": ^000000" +
        strmobinfo(1, getd(Ac() + "ID_" + .@s1)) +
        " (^3355FF" + getd(Ac() + "CC_" + .@s1) + " / " + getd(Ac() + "C_" + .@s1) + "^000000)";
    // mes "Reward: ^DD8800" + getd(".CRD_" + .@s1 + "[0]") + " Arsenal Hunting Badges^000000";
    mes " ";
    mes "Would you like to";
    mes "abandon this quest?";
    if (select("No:Yes") == 1) {
      end;
    }

    // Abandon cooldown
    .@acd = .CoolDownOnDelete * (.@s1 + 1);

    // About to abandon
    clear;
    mes .@name$;
    mes "By abandoning the quest,";
    mes "you won't get any reward";
    mes "and a ^FF0000" + .@acd + " minute cooldown^000000";
    mes "will be applied!";
    mes " ";
    mes "Are you sure?";
    if (select("No:Yes") == 1) {
      end;
    }

    // Abandoned
    clear;
    setd(
      Ac() + "CD_" + .@s1,
      getgmlevel() >= .GMTestGroup
        ? gettimetick(2) + 60 // 1 min cooldown for GMs (<= 10)
        : gettimetick(2) + (.@acd * 60)
    ); // Apply cooldown
    setd(Ac() + "ID_" + .@s1, 0);
    setd(Ac() + "C_" + .@s1, 0);
    setd(Ac() + "CC_" + .@s1, 0);
    
    mes .@name$;
    mes "The quest has been abandoned!";
    end;
  }

	if (BaseLevel < .CataMN_L[.@s1] || BaseLevel > .CataMX_L[.@s1]) {
    mes .@name$;
		mes "You need to be between";
    mes "level " + .CataMN_L[.@s1] + " and " + .CataMX_L[.@s1] + " to get this quest!";
		end;
	}

  mes .@name$;
  mes "Would you like to start a quest?";
  if (select("Yes:No") == 2) {
    end;
  }

  // Prepare quest
  copyarray(.@mid, getd(".m_id_" + .@s1), getarraysize(getd(".m_id_" + .@s1)));
  .@r = rand(getarraysize(.@mid));
  copyarray(.@mmn, getd(".m_mn_" + .@s1), getarraysize(getd(".m_mn_" + .@s1)));
  copyarray(.@mmx, getd(".m_mx_" + .@s1), getarraysize(getd(".m_mx_" + .@s1)));

  // Monster ID
  setd(Ac() + "ID_" + .@s1, .@mid[.@r]);
  // Randomize total count
  setd(Ac() + "C_" + .@s1, rand(getd(".m_mn_" + .@s1 + "[" + .@r + "]"), getd(".m_mx_" + .@s1 + "[" + .@r + "]")));
  // Set count to 0
  setd(Ac() + "CC_" + .@s1, 0);

  mes "Hunt: ^3355FF" + getd(Ac() + "C_" + .@s1) + " " + strmobinfo(1, getd(Ac() + "ID_" + .@s1)) + "^000000";
  // mes "Reward: ^DD8800" + getd(".CRD_" + .@s1 + "[0]") + " Arsenal Hunting Badges^000000";
end;

OnNPCKillEvent:
  for (.@i = 0; .@i < getarraysize(.CataName$); .@i++) {
    // Killed the right mob in this category
    if (getd(Ac() + "ID_" + .@i) == killedrid && !getd(Ac() + "COM_" + .@i)) {
      setd(Ac() + "CC_" + .@i, getd(Ac() + "CC_" + .@i) + 1);
      message strcharinfo(0), strmobinfo(1, getd(Ac() + "ID_" + .@i)) + " (" + getd(Ac() + "CC_" + .@i) + " / " + getd(Ac() + "C_" + .@i) + ")";

      // Done?
      if (getd(Ac() + "CC_" + .@i) >= getd(Ac() + "C_" + .@i)) {
        setd(Ac() + "COM_" + .@i, true);
        message strcharinfo(0), strmobinfo(1, getd(Ac() + "ID_" + .@i)) + ": Done!";
      }
    }
  }
end;

OnHuntingCheck:
  dispbottom "[ Hunting Quest ]",0xFFD64F;
  for (.@i = 0; .@i < getarraysize(.CataName$); .@i++) {
    // If complete
    if (getd(Ac() + "COM_" + .@i)) {
      dispbottom .CataName$[.@i] + ": Done", 0xFFE987;
      continue;
    }

    // If cooldown
    .@CD = getd(Ac() + "CD_" + .@i);
    if (.@CD > gettimetick(2)) {
      dispbottom .CataName$[.@i] + ": " + CooldownStr(.@CD) + " cooldown", 0xFFE987;
      continue;
    }

    // If in progress
    if (getd(Ac() + "C_" + .@i) > 0) {
      dispbottom .CataName$[.@i] + ": " + strmobinfo(1,getd(Ac() + "ID_" + .@i)) +
                 " (" + getd(Ac() + "CC_" + .@i) + " / " + getd(Ac() + "C_" + .@i) + ")", 0xFFE987;
      continue;
    }

    // Nothing
    dispbottom .CataName$[.@i] + ": Inactive", 0xFFE987;
  }
end;

function Ac {
  if (.AccountBase) {
    return "#" + .VariableName$;
  }
  return .VariableName$;
}

function AddCata {
  .@s = getarraysize(.CataName$);
  set getarg(1),.@s;
  .CataName$[.@s] = getarg(0);
  .CataMN_L[.@s] = getarg(2);
  .CataMX_L[.@s] = getarg(3);
  .CataCD[.@s] = getarg(4);
  .CataBXP[.@s] = getarg(5);
  .CataJXP[.@s] = getarg(6);
  .CataRP[.@s] = getarg(7);
  // Item rewards
  for (.@i = 8; .@i < getargcount(); .@i += 2) {
    .@s2 = getarraysize(getd(".IRD_" + .@s));
    setd ".IRD_" + .@s + "[" + .@s2 + "]", getarg(.@i);
    setd ".CRD_" + .@s + "[" + .@s2 + "]", getarg(.@i + 1);
  }
  return;
}

function AddMob {
  .@s = getarraysize(getd(".m_id_" + getarg(0)));
  setd ".m_id_" + getarg(0) + "[" + .@s + "]",getarg(1);
  setd ".m_mn_" + getarg(0) + "[" + .@s + "]",getarg(2);
  setd ".m_mx_" + getarg(0) + "[" + .@s + "]",getarg(3);
  return;
}

// Readable cooldown
function CooldownStr {
  .@r$ = ""; // result
  .@t = getarg(0) - gettimetick(2); // time difference in seconds
  
  // Show seconds only when it's less than a minute
  if (.@t < 60) {
    return .@t + " second" + (.@t > 1 ? "s" : "");
  }

  // Days
  .@d = .@t / 60 / 60 / 24;
  if (.@d) {
    .@r$ += .@d + " day" + (.@d > 1 ? "s" : "");
  }

  // Hours
  .@h = (.@t / 60 / 60) % 24;
  if (.@h) {
    .@r$ += (.@r$ ? ", " : "") + .@h + " hour" + (.@h > 1 ? "s" : "");
  }

  // Minutes
  .@m = (.@t / 60) % 60;
  if (.@m) {
    .@r$ += (.@r$ ? ", " : "") + .@m + " minute" + (.@m > 1 ? "s" : "");
  }

  return .@r$;
}

OnInit:
  .AccountBase = false; // account based or character based
  .ExpServerRate = true; // get exp according to the server rate?
  .CoolDownOnDelete = 30; // cooldown in minutes upon deleting the quest
  .GMTestGroup = 10; // minimum group for GM testers
	.VariableName$ = "HUNT_Q_";
  bindatcmd("huntingquest", strnpcinfo(3) + "::OnHuntingCheck", 0, 99);
  freeloop(1);

  AddCata("Poring (1-10)", .HQ1, 1, 10, 1, 64, 300, 0);
  AddMob(.HQ1, 1002, 50, 50);

  AddCata("Spore (11-20)", .HQ2, 11, 20, 1, 324, 3000, 0);
  AddMob(.HQ2, 1014, 50, 50);

  AddCata("Metaling (21-30)", .HQ3, 21, 30, 1, 1378, 12000, 0);
  AddMob(.HQ3, 1613, 50, 50);

  AddCata("Jakk (31-40)", .HQ4, 31, 40, 1, 6109, 35000, 0);
  AddMob(.HQ4, 1130, 50, 50);

  AddCata("Alligator (41-50)", .HQ5, 41, 50, 1, 15195, 90000, 0);
  AddMob(.HQ5, 1271, 50, 50);

  AddCata("Nine Tail (51-60)", .HQ6, 51, 60, 1, 51068, 180000, 0);
  AddMob(.HQ6, 1180, 50, 50);

  AddCata("Pasana (61-70)", .HQ7, 61, 70, 1, 137442, 350000, 0);
  AddMob(.HQ7, 1154, 50, 50);

  AddCata("Alarm (71-80)", .HQ8, 71, 80, 1, 509483, 600000, 0);
  AddMob(.HQ8, 1193, 50, 50);

  AddCata("Goat (81-90)", .HQ9, 81, 90, 1, 1240800, 1300000, 0);
  AddMob(.HQ9, 1372, 50, 50);

  AddCata("Anolian (91-99)", .HQ10, 91, 99, 1, 9737400, 2100000, 0);
  AddMob(.HQ10, 1206, 50, 50);

end;
}
